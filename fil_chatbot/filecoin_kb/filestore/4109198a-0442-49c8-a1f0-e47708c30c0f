{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "The types of computation and environment it uses are announceable/discoverable. \n\nFluence uses the term [Particle](https://doc.fluence.dev/docs/concepts) to refer to it secure distributed state medium.  The distributed state medium includes replication data structures containing (1) application data, (2) workflow scripts and (3) some metadata that traverse programmatically specified routes in a highly secure manner. The particles can be thought to hop from distributed compute service to distributed compute service across the peer-to-peer network as specified by the application workflow updating along the way.  \n\nThe Services on Fluence behave like microservices: they are created on nodes and served by the VM and can\u00a0*only*\u00a0be called by the VM.  Services are logical constructs instantiated from Wasm modules that contain some business logic and configuration data.  Services can accept incoming calls but can't initiate an outgoing request without being called.   \n\n**Applications**", "metadata": {}}}