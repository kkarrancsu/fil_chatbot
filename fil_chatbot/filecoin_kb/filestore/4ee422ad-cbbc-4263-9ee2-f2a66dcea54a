{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "### Heuristics\n\nHeuristics are defined as simple rules that encode a specific behavior we are trying to avoid. In this module, we will have heuristics for the two levels described before - requests and node operators.\n\nMost heuristics have a threshold that needs to be set or tuned. This threshold depends on a single metric that we are comparing against. For instance, if we had a *fast requests* heuristic that aimed to catch operators that were reporting impossibly high TTFB values, the metric would be TTFB, and we would need to set a threshold on this metric to encode what is \"impossibly high\".\n\nWe can interpret this problem as a search for univariate anomalies or outliers. In the case of the *fast requests* heuristic, we are interested in data points that are too small for the *\"normal\"* data distribution. Here, the threshold is the point below which we consider a data point *\"abnormal\"*.\n\nThere are two ways one can go about setting these thresholds:", "metadata": {}}}