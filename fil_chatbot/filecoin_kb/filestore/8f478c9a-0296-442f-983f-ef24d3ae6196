{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "In the shutterized version of Optimism, the main addition to the existing stack is a set of keypers who generate keys to encrypt and decrypt transactions. Users can send encrypted transactions to protect them from frontrunning and censorship. To do this, users first create a payload and encrypt it with an encryption key that the keyper generates. They then submit the encrypted payload to a smart contract, the Shutter Inbox Contract. Whenever the sequencer seals a block, the keypers generate the decryption key for it and broadcast it on a P2P network. The sequencer picks up the key and puts it at the front of the block. Executing this transaction will result in all encrypted transactions being read from the Shutter Inbox Contract, decrypted, and executed. The state transition function ensures that the sequencer plays by the rules and that blocks fulfill the structure outlined above. In particular, blocks without a decryption key at the top (or an incorrect one) are deemed invalid.", "metadata": {}}}