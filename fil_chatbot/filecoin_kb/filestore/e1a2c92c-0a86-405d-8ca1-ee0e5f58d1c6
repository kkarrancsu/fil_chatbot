{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "```{Python, eval=FALSE, FALSE}\n# chain= chain of tilde{G}\n# ProbMatrix= Matrix P_ij\n# Nsteps= Number of steps to simulate\n# states= list of intervals e.g., states=[-1,-0.5,0,0.5,1]\n# Nh Length of the states array\n\n    for i in range(Nsteps):\n         current_index=np.argmin(chain[i]>states)\n         #samples from P\n         new_index=np.random.choice(a=np.arange(Ns),p=ProbMatrix[current_index,:])\n         #Gets some random value inside the interval\n         if new_index<Nh:\n            low=states[new_index]\n            high=states[new_index+1]\n            chain[i]=low+(high-low)*np.random.uniform()\n          else:\n            chain[i]=1", "metadata": {}}}