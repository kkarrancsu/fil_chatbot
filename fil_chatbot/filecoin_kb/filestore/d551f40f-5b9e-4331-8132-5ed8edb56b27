{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "In particular, we treat a message $m$ as a set of $N_m\\geq 1$ *instructions* (or OpCodes) $m=\\{c_{i_j}\\}_{j=1}^{N_m}$. Here, each OpCode $c_{i_j}$ consumes a specific amount of gas $g_\\ell(c_{i_j})$ of a unique, specific, lane $\\ell$. Thus, any given message consumes $G^m_\\ell$ gas units of lane $\\ell$, with $G^m_\\ell$ understood as the sum of the gas consumed by the OpCodes that execute on the lane $\\ell$. This is illustrated in the figure below. \n\n![](https://hackmd.io/_uploads/HJdhVJm9h.png)\n\nIt is worth mentioning that our design does not allow for partial inclusion, i.e., a message containing $M$ instructions, will only be included if all M instructions can be executed. Notice that this is **not** different to how messages are included in bocks today.  \n\nWith this in mind, what we propose is:", "metadata": {}}}