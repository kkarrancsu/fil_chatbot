{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "#### Conditional statement evolution\n\nOne straight forward solution to keeping the dynamic target block size within bounds, is to follow the perscribed time evolution, only if that won't mean violating the bounds. The rule would look as follows:\n$$ \\begin{array}{cc}\n{\\rm if}& H(\\Delta T_t\\Delta B_t)\\cdot B_{t}^T<B^T\\\\\n& B_{t+1}^T=H(\\Delta T_t\\Delta B_t)\\cdot B_{t}^T\\\\\n{\\rm else}&\\\\\n&B_{t+1}^T=B_{t}^T\n\\end{array}$$\nThis rule has the advantage of being simple enough to implement and understand, while having the disadvantage of being less symmetric relative to both bounds at 0 and $B^T$, as well as throwing away arbitrary amounts of information once the target block size is close enough to $B^T$. \n\n#### Symmetric evolution rule\n\nAnother approach is to come up with an evolution rule that displays similar behavior when $B_t^T$ is close to 0 and when it is close to $B^T$.", "metadata": {}}}