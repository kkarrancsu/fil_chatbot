{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "To give an example, let's assume we run our payments every hour. For every hour we have 60 health checks (1 per min). If node $k$ failed 20 health checks, then:\n\n$$\nd_k = \\frac{20}{60} = \\frac{1}{3} \\\\\n\\implies u_k = 1 - d_k = \\frac{2}{3}\n$$\n\nIt is important to note that this method gives only an estimate of uptime. It is also aggressive with how it penalizes nodes for downtime because it assumes that if a node fails a health check then it must be down for a whole minute. In addition, it will miss downtime events that happen between health checks.\n\n#### Combining scoring functions\n\nNow that we have described what functions could be used to score each service, we need to define how we can combine services into a single scoring function.", "metadata": {}}}