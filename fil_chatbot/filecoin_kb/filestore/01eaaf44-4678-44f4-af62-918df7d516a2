{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "More mathematically, for BLS signatures, we typically work in a pairing-friendly elliptic curve setting. Let $G_1, G_2,G_T$ be three cyclic groups of prime order $p$. We use a bilinear pairing, $e$ i.e., a mapping $e$ that satisfies:\n\\begin{aligned}\ne: G_1 \\times G_2 &\\rightarrow G_T\\\\\ne(a G_1, b G_2) &=e( G_1,  G_2)^{ab} \\quad (\\textsf{Bilinearity})\n\\end{aligned}\n\nThe components of the BLS protocol are then given as follows:  \n1. **Key Generation**:\n    - Pick a private key $x \\in \\mathbb{Z}_p$.\n    - Compute the public key $y = g^{x}$ in $G_1$, where $g$ is a generator of $G_1$.\n\n2. **Signature Generation**:\n    - To sign a message $m$, compute the hash $H(m) \\in G_1$. Here $H$ is the *hash function*\n    - The signature $s$ is then $s = H(m)^{x} \\in G_1$.\n\n3. **Signature Verification**:\n    - Verify the signature $s$ using the public key $pk$ and a pairing. The signature is valid if $e(s, g_2) = e(H(m), y)$, where $g_2$ is a generator of $G_2$.", "metadata": {}}}