{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "### Threshold cryptography\n\nSimply put, it's like sharing a secret among a group, where only a certain number of members (but not all) are needed to reveal the secret. In the context of Drand, this \"sharing\" is crucial for generating randomness across multiple participants. In particular, it uses ($t-n$) threshold cryptography, described next. \n\n**$(t-n)$-threshold cryptography** In this setting, any $t$ participants out of $n$ ($n\\geq t$) are needed to create a signature. This is key to generating randomness in a descentralized way. One common way of doing so is via the *Shamir Secret Sharing* protocol.\n\n**Shamir Secret Sharing Protocol (SSSP)**. In this setting, you split a key $s$ into $n$ *shares* in such a way that at least $t$ shares are needed to reconstruct the original value. This is achieved by observing that **any** polynomial of degree $t-1$ (denoted by $f_{t-1}$) can be reconstructed by using lagrange interpolation of $t$ points $\\{x_i,f_{t-1}(x_i)\\}_{i=1}^{t}$ This works as follows:", "metadata": {}}}